<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java基础 on Hello Friend</title><link>/series/java%E5%9F%BA%E7%A1%80/</link><description>Recent content in Java基础 on Hello Friend</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Sun, 09 Apr 2023 02:51:02 +0000</lastBuildDate><atom:link href="/series/java%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml"/><item><title>Java基础之集合</title><link>/posts/inbox/java_base_230409/</link><pubDate>Sun, 09 Apr 2023 02:51:02 +0000</pubDate><guid>/posts/inbox/java_base_230409/</guid><description>Java基础之集合总览 Java集合是经常使用到的，集合类主要由Collection 和 Map 这两个接口派生。
Collection 派生出 Set，List, Queue。 Map派生HashMap, TreeMap， ConcurrentHashMap
Collection常用方法 // 返回集合中元素个数 int size(); //Returns true if this collection contains no elements. boolean isEmpty(); // 判断集合中是否存在元素o , (o==null ? e==null : o.equals(e)). boolean contains(Object o); // 添加元素 boolean add(E e); // 删除元素 boolean remove(Object o); // 清空元素 void clear(); Map常用方法 // 返回 k-v 数量 int size(); // Returns &amp;lt;tt&amp;gt;true&amp;lt;/tt&amp;gt; if this map contains no key-value mappings. boolean isEmpty(); // 存在key就返回true, boolean containsKey(Object key); boolean containsValue(Object value); // 放入k,v ， key可以为null V put(K key, V value); // 删除k-v, key可以为null V remove(Object key); // 返回key集合 Set&amp;lt;K&amp;gt; keySet(); // 返回key-value 集合 Set&amp;lt;Map.</description></item></channel></rss>